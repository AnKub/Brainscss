{{!--
Це код container файлу для index сторінки,
в якому міститься код, котрий буде віддаватися по шляху (PATH) - "/"
--}}

<div class="p-5">
    <h1>USB хаб Type C 12 в 1 HDMI VGA AUX 3.5 mm</h1>
    <p>Якщо ми хочемо звертатися до класу, необхідно розпочинати з крапик , типу: .бокс</p>
    <em class="display-4 box">Якщо в нас з`являеться потреба звертатися до тегу просто пишемо назву тегу та відкриваємо
        душки</em>
    <br>
    <section>
        <p>Дочірні селектори, відносяться до окремої групи елементів що знаходяться у якомусь блоці</p>
        <a href="#test">For target</a>
    </section>
    <br>
    <ul>
        <li>Селектор першої дитини звернення відбувається через зазначення тегу потім двокрапка а піля необхідно писати
            first-child </li>
        <li> Також можливе звернення до сотаннього тегу використовуючи last-child</li>
        <li> Також молве звернення до дочірніх шляхом використання only-child у разі якщо немає інших тегів. Грубо
            кажучи, він не має сенсу бо можливе звернення шляхо вище зазначених</li>
    </ul>
    <p id="user">селектор идентифікатор ставимо амість крапки рещітку та назву як у тегаг у цьому приписі</p>

    <button type="button" class="btn btn-outline-info">Купити</button>
    <br>
    <div>
        <p class="mu">Також можливе звернення до відповідного тегу з дчірніх, для цього є необхідність вказувати
            безпосередній
            тег звернення а після зазначати first-of-type</p>
        <p class="mu">Теж саме виконується для останніх last-of-type</p>
    </div>
    <div>
        <li class="m">Селектор порядкової дитини, надає змогу звертатися до безпосередніх номерів підпорядкованих
            елементів,
            реалізація: якщо ми для прикладу маэмо у блоцы з тегами декылька однакових р ми можемо p:nth-child(2) у
            дужках зазначається порядковий номер елемента доя кого ми звертаємось, отже це є універсальним варівантом дя
            написання коду із великою кількістю необхідних зверненнь </li>
        <li>Є можливість обирати парні елементи використовуючі even</li>
        <li>Є можливість обирати <b>НЕ</b>парні елементи використовуючі odd</li>
    </div>
    <div>
        <h4>Існує селектор <em>НЕ</em> відповідності який дає змогу звертатися до тегу який не потрібно піддавати якійсь
            стилізації на відміну від інших наприклад: p:not(.item) це ознаяає що теги що не мають класу item не
            закрашуються
            так само ми можемо використовувати таке обьуження на конкретний тег </h4>
        <h6>Також існує тег пустого контенту наприклад p:empty</h6>
    </div>
    <div class="top">
        <li class="display-6" btn>Селектор атрибута дає змогу звертатися до тегів використовуючі атрибути та їх значення
            для цього використовується a[href] квадратні дужки </li>
        <input type="number" class="input" placeholder="This just start before be best">
        <p>Спосіб який надає змогу надаgit вати кольори та значення тегам якщо змінюється
            значення чи атрибут у квадратних дужках вказуеться що саме необхідно відстежувати ~=</p>
        <li>Селектор значення префіксу атрибута [atr|='value'] </li>
    </div>

    <div class="card p-5 mb-5 card-dark">
        <button class="btn btn-outline-warning">HaryUp click</button>
        <li>Також часто використовується селектор значення почтку атрибута де замість | ставиться ^ наприклад :
            button[atr^="btn"]</li>
        <a class="btn btn-outline-info" href="https://picsum.photos/200/300">some</a>

        <li>Селектор кореня знчення атрибута прописується так:div[class*="btn"] Найбільш зручне використання, бо не
            потребує багато уточненнь де саме повинен знаходитися атрибут, просто достатньо універсальний </li>
        <li>Селектор кореня знчення атрибута прописується так:div[class<b>$</b>="btn"] Найбільш зручне використання, бо
            не
            потребує багато уточненнь де саме повинен знаходитися атрибут, просто достатньо універсальний </li>

    </div>
    <div class="card p-3 card-dark">
        <li>Селектор псевдоелементів приклад span::first-letter forexemle: p::first-letter отже кожен тег такого типу
            буде починатися з кольру який ми задамо. За аналогією працює first-line </li>
        <li></li>
    </div>
</div>
<div>
    <title class="display-4"> <em>Selectors ext part </em> </title>
</div>
<div class="card p-5 m-5">
    <p>Селектор цільового тегу, свого роду це якірь, при натисканні на який сторінка прокручуєтьтя до того тегу який ми
        вказали. Зазначається як: :target</p>
    <p id="test">For example</p>
</div>
<div class="card p-5 m-5">
    <p>Селектор цільового тегу, свого роду це якірь, при натисканні на який сторінка прокручуєтьтя до того тегу який ми
        вказали. Зазначається як: :target</p>
    <p id="test">For example</p>
</div>
<div class="card p-5 m-5">
    <p>Селектор не відвіданих посилань, використовується для того щоб відмічати ті посилання, що не були відвідані
        користувачем. Заззначаеться :link</p>
    <a class="link" href="#test">For example</a>
</div>
<div class="card p-5 m-5">
    <p>Селектор наведення, :hover, він відповідає за стан тегу під час наведення курсоруk</p>
    <a class="link" href="#test">For example</a>
</div>
<div class="card p-5 m-5">
    <p>Селктор який обирає тег, для натискання мишкою та зміну його відобаження наприклад зміна кольору шрифту чи ще
        чогось прописується як :active</p>
    <p class="act"></a>For example</p>
</div>
<div id="test" class="card p-5 m-5">
    <p>Селектор який обирае тег, якщо користувач почав з ним ваємодіяти :focus</p>
    <input>
</div>
<div id="test" class="cardt p-5 m-5">
    <p>Селектор фокус в середині, обирає тег , коли користувач взаємодіє з тегом або з дочірніми компонентами
        :focus-within</p>
    <P lang="en">Також існує черговий селектор обирае код мови :lang(value) - на цьому місці мое відзначатися en fr de
        <input type="text">
    </P>
</div>
<div id="test" class="card p-5 m-5">
    <p>:enabled обирає тег ФОРМИ який доступни та не заблакований для взаємодії</p>
    <button> </button>
</div>